// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalkingDead.Models;

namespace WalkingDead.Migrations
{
    [DbContext(typeof(WalkingDeadContext))]
    partial class WalkingDeadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WalkingDead.Models.Movement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("UserRegistreNational")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserRegistreNational");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("WalkingDead.Models.Test", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRegistreNational")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserRegistreNational");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("WalkingDead.Models.User", b =>
                {
                    b.Property<string>("RegistreNational")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodePostal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegistreNational");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WalkingDead.Models.Movement", b =>
                {
                    b.HasOne("WalkingDead.Models.User", "User")
                        .WithMany("Movements")
                        .HasForeignKey("UserRegistreNational");
                });

            modelBuilder.Entity("WalkingDead.Models.Test", b =>
                {
                    b.HasOne("WalkingDead.Models.User", "User")
                        .WithMany("Tests")
                        .HasForeignKey("UserRegistreNational");
                });
#pragma warning restore 612, 618
        }
    }
}
